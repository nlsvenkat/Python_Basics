# -*- coding: utf-8 -*-
"""python_Basics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bhKbq5489TPf87EA1gpgIpS6PiiJsoaz

#1.python program for printing hello world

Every program is eventually a data processor, so we should know how to input and output data within it. There exists a function, print(), to output data from any Python program. To use it, pass a comma separated list of arguments that you want to print to the print() function. Let's see an example.

- Now let us print a word "hello world"
"""

print("hello world")

"""#2.python program for adding numbers

We can add two numbers by using print() function by placing the numbers inside this function and place an operator("+") between them.To get more clarity look at the program below

- now let us add 2 and 3
"""

print(2+3)

"""#3.python program for multiplying numbers by taking input from user

Every program is eventually a data processor, so we should know how to input and output data within it. There exists a function, print(), to output data from any Python program. To use it, pass a comma separated list of arguments that you want to print to the print() function.

To input data into a program, we use input(). This function reads a single line of text, as a String.We can use int(input()) function to take integer as an input.

We can multiply two numbers by using print() function by placing the numbers inside this function and place an operator("*") between them.see the program below to get more clear.

- Let's try to write a program that inputs two numbers and prints their product.
"""

a=int(input())
b=int(input())
print(a*b)

"""- Let us see what happend here

We read the two numbers and store them in the variables a and b using the assignment operator " = ". On the left side of an assignment operator we put the name of the variable. The name could be a string of latin characters (A-Z, a-z, 0-9, _) but must start with a letter in the range A-Z or a-z. On the right side of an assignment operator we put any expression that Python can evaluate. The name starts pointing to the result of the evaluation.
"""